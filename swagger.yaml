---
openapi: 3.0.1
info:
  title: Parks
  version: v1
paths:
  "/api/park/all":
    get:
      tags:
        - Park
      responses:
        "200":
          description: Success
  "/api/park/{id}":
    get:
      tags:
        - Park
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Success
  "/api/park/search/{parkName}":
    get:
      tags:
        - Park
      parameters:
        - name: parkName
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Success
  "/api/review/send-review":
    post:
      tags:
        - Review
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CreateReviewDto"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateReviewDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/CreateReviewDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CreateReviewDto"
      responses:
        "200":
          description: Success
  "/api/review/get-park-reviews/{parkId}":
    get:
      tags:
        - Review
      parameters:
        - name: parkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Success
  "/api/review/get-review/{reviewId}":
    get:
      tags:
        - Review
      parameters:
        - name: reviewId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Success
  "/api/review/get-user-reviews/{userId}":
    get:
      tags:
        - Review
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Success
  "/api/review/update-review/{reviewId}":
    put:
      tags:
        - Review
      parameters:
        - name: reviewId
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/UpdateReviewDto"
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateReviewDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/UpdateReviewDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UpdateReviewDto"
      responses:
        "200":
          description: Success
  "/api/user/register":
    post:
      tags:
        - User
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
      responses:
        "200":
          description: Success
  "/api/user/login":
    post:
      tags:
        - User
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
      responses:
        "200":
          description: Success
  "/api/user/logout":
    post:
      tags:
        - User
      responses:
        "200":
          description: Success
  "/api/user/{id}":
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Success
  "/api/user/change-password":
    put:
      tags:
        - User
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ChangePasswordDto"
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangePasswordDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/ChangePasswordDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ChangePasswordDto"
      responses:
        "200":
          description: Success
  "/api/user":
    delete:
      tags:
        - User
      responses:
        "200":
          description: Success
components:
  schemas:
    ChangePasswordDto:
      required:
        - newPassword
        - oldPassword
      type: object
      properties:
        oldPassword:
          minLength: 1
          type: string
        newPassword:
          minLength: 1
          type: string
      additionalProperties: false
    CreateReviewDto:
      type: object
      properties:
        parkId:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
      additionalProperties: false
    LoginDto:
      required:
        - email
        - password
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
        password:
          minLength: 1
          type: string
      additionalProperties: false
    RegisterDto:
      required:
        - confirmPassword
        - email
        - firstName
        - lastName
        - password
      type: object
      properties:
        email:
          minLength: 1
          type: string
          format: email
        firstName:
          minLength: 1
          type: string
        lastName:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        confirmPassword:
          minLength: 1
          type: string
      additionalProperties: false
    UpdateReviewDto:
      type: object
      properties:
        text:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Please enter a valid token
      scheme: Bearer
      bearerFormat: JWT
security:
  - Bearer: []
